{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","className","href","onClick","Array","fill","map","_","index","page","isCurrent","itemsPerPageOptions","getNumbers","start","end","numbers","i","push","App","useState","setCurrentPage","itemsPerPage","setItemsPerPage","startIndex","endIndex","min","id","value","onChange","e","Number","target","option","htmlFor","n","ReactDOM","render","document","getElementById"],"mappings":"4KA+EeA,EAtE+B,SAAC,GAKxC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAcrC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAS,mBAA8B,IAAhBL,EAAoB,YAAc,IAA7D,SACE,mBACE,UAAQ,WACRK,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBN,EACfO,QApBgB,WAClBP,EAAc,GAChBC,EAAaD,EAAc,IAazB,oBAUDQ,MAAMN,GACJO,KAAK,GACLC,KAAI,SAACC,EAAGC,GACP,IAAMC,EAAOD,EAAQ,EACfE,EAAYD,IAASb,EAE3B,OACE,oBAEEK,UAAS,mBAAcS,EAAY,UAAY,IAFjD,SAIE,mBACE,UAAQ,WACRT,UAAU,YACVC,KAAI,WAAMO,GACVN,QAAS,kBAAMN,EAAaY,IAJ9B,SAMGA,KATEA,MAcb,oBAAIR,UAAS,mBAAcL,IAAgBE,EAAa,YAAc,IAAtE,SACE,mBACE,UAAQ,WACRG,UAAU,YACVC,KAAK,QACL,gBAAeN,IAAgBE,EAC/BK,QA/CgB,WAClBP,EAAcE,GAChBD,EAAaD,EAAc,IAwCzB,wBC7DFe,EAAsB,CAAC,EAAG,EAAG,GAAI,IAEjCC,EAAa,SAACC,EAAeC,GAGjC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAOG,GAAKF,EAAKE,IAC5BD,EAAQE,KAAKD,GAGf,OAAOD,GAqFMG,EAlFO,WACpB,MAAsCC,mBAAS,GAA/C,mBAAOvB,EAAP,KAAoBwB,EAApB,KACA,EAAwCD,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAaMC,GAAc3B,EAAc,GAAKyB,EAAe,EAChDG,EAAWzB,KAAK0B,IAAIF,EAAaF,EAAe,EAbnC,IAenB,OACE,sBAAKpB,UAAU,YAAf,UACE,uDAEA,oBAAGA,UAAU,OAAO,UAAQ,OAA5B,iBAEG,IACAL,EACA,IAJH,SAMG,IACA2B,EACA,IARH,IAUG,IACAC,EACA,IAZH,KAcG,IAjCY,GAmBf,OAmBA,sBAAKvB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRyB,GAAG,kBACHzB,UAAU,eACV0B,MAAON,EACPO,SAtCR,SAACC,GACDP,EAAgBQ,OAAOD,EAAEE,OAAOJ,QAChCP,EAAe,IA+BT,SAOGT,EAAoBL,KAAI,SAAC0B,GAAD,OACvB,wBAAqBL,MAAOK,EAA5B,SACGA,GADUA,UAOnB,uBAAOC,QAAQ,kBAAkBhC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEP,MA7Da,GA8DbC,QAAS0B,EACTzB,YAAaA,EACbC,aA9DmB,SAACY,GACxBW,EAAeX,MA+Db,6BACGG,EAAWW,EAAYC,GAAUlB,KAAI,SAAC4B,GAAD,OACpC,qBAAI,UAAQ,OAAZ,iBAEG,IACAA,IAHqBA,YCpFlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.1dbd3c28.chunk.js","sourcesContent":["import React from 'react';\n\ninterface PaginationProps {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nconst Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n\n  const handlePrevClick = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextClick = () => {\n    if (currentPage < totalPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item${currentPage === 1 ? ' disabled' : ''}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePrevClick}\n        >\n          «\n        </a>\n      </li>\n      {Array(totalPages)\n        .fill(0)\n        .map((_, index) => {\n          const page = index + 1;\n          const isCurrent = page === currentPage;\n\n          return (\n            <li\n              key={page}\n              className={`page-item${isCurrent ? ' active' : ''}`}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${page}`}\n                onClick={() => onPageChange(page)}\n              >\n                {page}\n              </a>\n            </li>\n          );\n        })}\n      <li className={`page-item${currentPage === totalPages ? ' disabled' : ''}`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages}\n          onClick={handleNextClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nexport default Pagination;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Pagination from './components/Pagination/Pagination';\n\nconst itemsPerPageOptions = [3, 5, 10, 20];\n\nconst getNumbers = (start: number, end: number) => {\n  const numbers = [];\n  // eslint-disable-next-line\n  for (let i = start; i <= end; i++) {\n    numbers.push(i);\n  }\n\n  return numbers;\n};\n\nconst App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const totalItems = 42;\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handleItemsPerPageChange\n  = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(Number(e.target.value));\n    setCurrentPage(1);\n  };\n\n  const startIndex = (currentPage - 1) * itemsPerPage + 1;\n  const endIndex = Math.min(startIndex + itemsPerPage - 1, totalItems);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page\n        {' '}\n        {currentPage}\n        {' '}\n        (items\n        {' '}\n        {startIndex}\n        {' '}\n        -\n        {' '}\n        {endIndex}\n        {' '}\n        of\n        {' '}\n        {totalItems}\n        )\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleItemsPerPageChange}\n          >\n            {itemsPerPageOptions.map((option) => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n      <ul>\n        {getNumbers(startIndex, endIndex).map((n) => (\n          <li data-cy=\"item\" key={n}>\n            Item\n            {' '}\n            {n}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}